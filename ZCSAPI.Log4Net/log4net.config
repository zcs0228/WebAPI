<?xml version="1.0" encoding="utf-8" ?>
<!--1.需要在AssemblyInfo里面添加[assembly: log4net.Config.XmlConfigurator(ConfigFile = "log4net.config", Watch = true)]
2.需要将log4net.config文件包含到引用该工程的工程中去-->
<configuration>
  <configSections>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler,log4net" />
  </configSections>
  <log4net debug="true">
    <root>
      <!--如果没有定义LEVEL的值,则缺省为DEBUG-->
      <!--日志级别由低到高:ALL<DEBUG<INFO<WARN<ERROR<FATAL<OFF-->
      <level value="ALL" />
      <!--文件形式记录日志-->
      <appender-ref ref="FileAppender" />
      <!--如果不启用相应的日志记录,可以通过这种方式注释掉
      <appender-ref ref="AdoNetAppender" />
      <appender-ref ref="SmtpAppender" />-->
    </root>
    <!--将日志写到文件中-->
    <appender name="FileAppender" type="log4net.Appender.FileAppender" >
      <file type="log4net.Util.PatternString" value="Logs/log%date{yyyy-MM-dd}.txt" />
      <datePattern value="yyyy-MM-dd" />
      <staticLogFileName value="true" />
      <appendToFile value="true" />
      <rollingStyle value="Date" />
      <datePattern value="yyyyMMdd" />
      <staticLogFileName value="true" />
      <!--<layout type="log4net.Layout.PatternLayout,log4net">
        <param name="ConversionPattern" value="%n%d %r [%t] %-5p %c %L - %m%n" />
      </layout>-->
      <!--自定义log输出格式-->
      <layout type="log4net.Layout.PatternLayout,log4net">
        <!--每条日志末尾的文字说明-->
        <conversionPattern value="记录时间：%date %n线程ID:[%thread] %n日志级别：  %-5level %n出错类：%logger property: [%property{NDC}] %n错误描述：%message %newline%n%n" />
      </layout>
      <filter type="log4net.Filter.LevelRangeFilter">
        <!--应用到Appender对象的过滤器-->
        <param name="LevelMin" value="DEBUG" />
        <param name="LevelMax" value="FATAL" />
      </filter>
    </appender>
    <!--将日志记录到数据库中,可以采用SQL和存储过程两种方式-->
    <!---数据库表创建语句:
          CREATE TABLE [dbo].[Log] (
          [Id] [int] IDENTITY (1, 1) NOT NULL,
          [Date] [datetime] NOT NULL,
          [Thread] [varchar] (255) NOT NULL,
          [Level] [varchar] (50) NOT NULL,
          [Logger] [varchar] (255) NOT NULL,
          [Message] [varchar] (4000) NOT NULL,
          [Exception] [varchar] (2000) NULL)
    -->
    <appender name="AdoNetAppender" type="log4net.Appender.AdoNetAppender">
      <bufferSize value="1" />
      <!--SQL数据源,本地安装SQL客户端-->
      <connectionType value="System.Data.SqlClient.SqlConnection, System.Data, Version=1.0.3300.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
      <!-- SQL连接字符串-->
      <!--<connectionString value="data source=[database server];initial catalog=[database name];integrated security=false;persist security info=True;User ID=[user];Password=[password]" />-->
      <connectionString value="data source=(local);initial catalog=RunTechData_20;integrated security=false;persist security info=True;User ID=sa;Password=123456" />
      <commandText value="INSERT INTO Log ([Date],[Thread],[Level],[Logger],[Message],[Exception]) VALUES (@log_date, @thread, @log_level, @logger, @message, @exception)" />
      <parameter>
        <parameterName value="@log_date" />
        <dbType value="DateTime" />
        <layout type="log4net.Layout.RawTimeStampLayout"  />
      </parameter>
      <parameter>
        <parameterName value="@thread" />
        <dbType value="String" />
        <size value="255" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%thread" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@log_level" />
        <dbType value="String" />
        <size value="50" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%level" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@logger" />
        <dbType value="String" />
        <size value="255" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%logger" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@message" />
        <dbType value="String" />
        <size value="4000" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%message" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@exception" />
        <dbType value="String" />
        <size value="2000" />
        <layout type="log4net.Layout.ExceptionLayout" />
      </parameter>
    </appender>
    <!--将日志发送到邮件中-->
    <appender name="SmtpAppender" type="log4net.Appender.SmtpAppender">
      <authentication value="Basic" />
      <!--收件人邮箱地址-->
      <to value="to@domain.com" />
      <!--发件人邮箱地址-->
      <from value="from@domain.com" />
      <!--发件人用户名(发件人邮箱地址)-->
      <username value="from@domain.com" />
      <!--发件人邮箱密码-->
      <password value="password" />
      <!--主题-->
      <subject value="程序异常日志记录邮件发送" />
      <!--邮件服务端-->
      <smtpHost value="SMTPServer.domain.com" />
      <bufferSize value="512" />
      <!--超长部分是否丢弃-->
      <lossy value="true" />
      <!--下面的定义,就是 日志级别 大于 WARN 的,才发邮件.-->
      <!--日志级别由低到高:ALL<DEBUG<INFO<WARN<ERROR<FATAL<OFF-->
      <evaluator type="log4net.Core.LevelEvaluator">
        <threshold value="WARN"/>
      </evaluator>
      <layout type="log4net.Layout.PatternLayout">
        <!--<conversionPattern value="%newline%date [%thread] %-5level %logger [%property{NDC}] - %message%newline%newline%newline" />-->
        <conversionPattern value="记录时间：%date %n线程ID:[%thread] %n日志级别：  %-5level %n出错类：%logger property: [%property{NDC}] %n错误描述：%message" />
      </layout>
    </appender>
  </log4net>
</configuration>